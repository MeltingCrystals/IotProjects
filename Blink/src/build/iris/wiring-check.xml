<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b31265422d8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3126363c58"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3126363c58"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3126371c50"/></to>
    </wire>
    <wire loc="19:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b312653add0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126a87420"/></to>
    </wire>
    <wire loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3126a87420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aafb60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b3126536020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126c438d8"/></to>
    </wire>
    <wire loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3126c438d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aafb60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2b31265491d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126c3cda8"/></to>
    </wire>
    <wire loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3126c3cda8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aafb60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3126556c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b312652dd08"/></to>
    </wire>
    <wire loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b312652dd08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b312655d5e8"/></to>
    </wire>
    <wire loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126aa64e0"/></to>
    </wire>
    <wire loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126a98e70"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b3126885b18"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b31268a6998"/></to>
    </wire>
    <wire loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b31268369f0"/></to>
    </wire>
    <wire loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126698130"/></to>
    </wire>
    <wire loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126a40be0"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b3126523308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b31261c60d0"/></to>
    </wire>
    <wire loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b31261c60d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b3126271d88"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b3126523ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126370080"/></to>
    </wire>
    <wire loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3126370080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126378020"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b3126522418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></to>
    </wire>
    <wire loc="26:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b312636fcf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b31269d34e8"/></to>
    </wire>
    <wire loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b312636f020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b31264faae0"/></to>
    </wire>
    <wire loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b3126378d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b31264fa4b0"/></to>
    </wire>
    <wire loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b31263786c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b31265852d8"/></to>
    </wire>
    <wire loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b31263786c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b312637a570"/></to>
    </wire>
    <wire loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b312637a570"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b3126381020"/></to>
    </wire>
    <wire loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b312637ac00"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b312636fcf0"/></to>
    </wire>
    <wire loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b312638c388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b3126395e00"/></to>
    </wire>
    <wire loc="141:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b3126395e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3126411430"/></to>
    </wire>
    <wire loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b31263804f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b312637ac00"/></to>
    </wire>
    <wire loc="191:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b31263bc968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b31264b4520"/></to>
    </wire>
    <wire loc="165:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b31263a04d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3126438020"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3126438020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dda100"/></to>
    </wire>
    <wire loc="176:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b31263b84d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b312644fd60"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b312644fd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e1e100"/></to>
    </wire>
    <wire loc="185:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b31263c11a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b31264688c8"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b31264688c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126eaa100"/></to>
    </wire>
    <wire loc="196:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b31263c8658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b31264c7c38"/></to>
    </wire>
    <wire loc="143:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b31263921a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b312640f740"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b312640f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126c9ac38"/></to>
    </wire>
    <wire loc="183:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b31263b2e00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b31264565b8"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b31264565b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126eb0100"/></to>
    </wire>
    <wire loc="146:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b31263904d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b312641c930"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b312641c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ce7180"/></to>
    </wire>
    <wire loc="157:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b31263a8658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3126432740"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3126432740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d59100"/></to>
    </wire>
    <wire loc="168:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b31263af968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3126449430"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3126449430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dd0100"/></to>
    </wire>
    <wire loc="179:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b31263b5968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b312644b120"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b312644b120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e50100"/></to>
    </wire>
    <wire loc="138:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b3126386968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3126415020"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3126415020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126caac38"/></to>
    </wire>
    <wire loc="149:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b312639e968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b312642cd60"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b312642cd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d14100"/></to>
    </wire>
    <wire loc="160:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b31263a5af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b312642fbd8"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b312642fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d87100"/></to>
    </wire>
    <wire loc="171:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b31263ace00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b31264458c8"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b31264458c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dc7100"/></to>
    </wire>
    <wire loc="188:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b31263be658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3126465d60"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3126465d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ea0100"/></to>
    </wire>
    <wire loc="194:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b31263ca348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b31264bbc38"/></to>
    </wire>
    <wire loc="174:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b31263ba1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b3126452a50"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b3126452a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e24100"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3126411430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ca0c38"/></to>
    </wire>
    <wire loc="152:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b312639a020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3126428120"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3126428120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d0b100"/></to>
    </wire>
    <wire loc="192:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b31263cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b31264b0cd8"/></to>
    </wire>
    <wire loc="155:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b3126398348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3126434500"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3126434500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d5f180"/></to>
    </wire>
    <wire loc="166:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b31263b1658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3126437120"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3126437120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dd7100"/></to>
    </wire>
    <wire loc="177:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b31263b7658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b312644ee18"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b312644ee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e1b100"/></to>
    </wire>
    <wire loc="186:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b31263c0348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3126467a50"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3126467a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ea7100"/></to>
    </wire>
    <wire loc="144:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b3126391348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b31264228c8"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b31264228c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126c97c38"/></to>
    </wire>
    <wire loc="147:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b312638e658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b312641aa50"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b312641aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ce4100"/></to>
    </wire>
    <wire loc="158:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b31263a77e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b31264318c8"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b31264318c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d56100"/></to>
    </wire>
    <wire loc="169:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b31263aeaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b31264485b8"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b31264485b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dcd100"/></to>
    </wire>
    <wire loc="180:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b31263b4af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b312645e2a8"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b312645e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e4d100"/></to>
    </wire>
    <wire loc="139:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b3126385af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3126414120"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3126414120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ca7c38"/></to>
    </wire>
    <wire loc="150:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b312639daf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b312642be18"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b312642be18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d11100"/></to>
    </wire>
    <wire loc="161:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b31263a4c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b312642ed60"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b312642ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d84100"/></to>
    </wire>
    <wire loc="189:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b31263bd7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b3126464e18"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b3126464e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e9d100"/></to>
    </wire>
    <wire loc="164:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b31263a1020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b312643ae40"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b312643ae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ddd180"/></to>
    </wire>
    <wire loc="175:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b31263b9348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3126451bd8"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3126451bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e21100"/></to>
    </wire>
    <wire loc="184:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b31263c2020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3126455740"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3126455740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ead100"/></to>
    </wire>
    <wire loc="195:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b31263c94d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b31264b63e0"/></to>
    </wire>
    <wire loc="142:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b3126393020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b31264105b8"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b31264105b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126c9dc38"/></to>
    </wire>
    <wire loc="153:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b31263991a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b31264272a8"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b31264272a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d08100"/></to>
    </wire>
    <wire loc="182:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b31263b3c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3126457500"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3126457500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e75180"/></to>
    </wire>
    <wire loc="156:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b31263974d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b31264335b8"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b31264335b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d5c100"/></to>
    </wire>
    <wire loc="167:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b31263b07e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b312644a2a8"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b312644a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dd4100"/></to>
    </wire>
    <wire loc="178:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b31263b67e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b312644c020"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b312644c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e53100"/></to>
    </wire>
    <wire loc="187:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b31263bf4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3126466bd8"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3126466bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ea3100"/></to>
    </wire>
    <wire loc="137:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b31263837a8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3126417dc0"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3126417dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126c72ca0"/></to>
    </wire>
    <wire loc="148:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b312639f7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b3126419bd8"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b3126419bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ce1100"/></to>
    </wire>
    <wire loc="159:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b31263a6968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b3126430a50"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b3126430a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d52100"/></to>
    </wire>
    <wire loc="170:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b31263adc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b3126446740"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b3126446740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126dca100"/></to>
    </wire>
    <wire loc="193:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b31263cb1a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b31264aa3e0"/></to>
    </wire>
    <wire loc="173:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b31263a9020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b3126453930"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b3126453930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126e27180"/></to>
    </wire>
    <wire loc="162:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b31263a3e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b312642de18"/></to>
    </wire>
    <wire loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b312642de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d81100"/></to>
    </wire>
    <wire loc="140:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b3126396c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b31264132a8"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b31264132a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126ca3c38"/></to>
    </wire>
    <wire loc="151:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b312639ce00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b3126429020"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b3126429020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b3126d0e100"/></to>
    </wire>
    <wire loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b3126270c58"/></to>
    </wire>
    <wire loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b312627a168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b31261bce40"/></to>
    </wire>
    <wire loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3126294988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3126b46578"/></to>
    </wire>
    <wire loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b31265852d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b312655d020"/></to>
    </wire>
    <wire loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b312655cce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b312655ee28"/></to>
    </wire>
    <wire loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b312655ee28"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b3126385af0"/></to>
    </wire>
    <wire loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b312655be70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b3126587020"/></to>
    </wire>
    <wire loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b3126587020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b3126386968"/></to>
    </wire>
    <wire loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b3126571020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b31265861b0"/></to>
    </wire>
    <wire loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b31265861b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b31263837a8"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b3126a66b70"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b3126a376e0"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3126a64e00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3126a3f800"/></to>
    </wire>
    <wire loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b3126a3f800"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3126f9b990"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3126a63a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b3126a3e3f0"/></to>
    </wire>
    <wire loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3126a3e3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b31266342a8"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b3126a70400"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b3126a66358"/></to>
    </wire>
    <wire loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b31266342a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b312669fd20"/></to>
    </wire>
    <wire loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3126a3d020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3126633020"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3126633020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3126683738"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b3126a3c5b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3126630658"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3126630658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b312669e908"/></to>
    </wire>
    <wire loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3126f9a5d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b31265e75d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b3126f99268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3126633020"/></to>
    </wire>
    <wire loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b31265e75d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3126628920"/></to>
    </wire>
    <wire loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b31266276f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b312663a1c8"/></to>
    </wire>
    <wire loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b312663a1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b3126647460"/></to>
    </wire>
    <wire loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b31266263f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b3126633020"/></to>
    </wire>
    <wire loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b3126625a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b31266342a8"/></to>
    </wire>
    <wire loc="169:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b3126624780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b3126623020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b31266351e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b3126698748"/></to>
    </wire>
    <wire loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b3126698748"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b31266cbda8"/></to>
    </wire>
    <wire loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b312662fc40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3126683180"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3126698130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b31266cb790"/></to>
    </wire>
    <wire loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b31266948f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b312662e020"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b312669d308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b3126696208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b312669c020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b3126697760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b3126694020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b3126a25060"/></to>
    </wire>
    <wire loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b3126696208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b31267e8020"/></to>
    </wire>
    <wire loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b3126697760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b31267e9868"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b31267e8db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b3126694020"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b31266bf020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b31266948f8"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b31267e6a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b31266948f8"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b3126801420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b31266948f8"/></to>
    </wire>
    <wire loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b31267e76c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b31266c8020"/></to>
    </wire>
    <wire loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b31267e6020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b31266c4950"/></to>
    </wire>
    <wire loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b31266c0020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b31267e2b48"/></to>
    </wire>
    <wire loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b31266d4e18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b31267e18c8"/></to>
    </wire>
    <wire loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b31267e18c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3126821350"/></to>
    </wire>
    <wire loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b31267f4448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b31268230c0"/></to>
    </wire>
    <wire loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b31268230c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b312681c310"/></to>
    </wire>
    <wire loc="332:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b312671e830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b31266f6d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b3126721020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b312671b918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b31267e4100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b31267e48a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b312681d290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b3126821b08"/></to>
    </wire>
    <wire loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b3126821b08"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b3126862780"/></to>
    </wire>
    <wire loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b312681c310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b3126861020"/></to>
    </wire>
    <wire loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b3126821350"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b3126862020"/></to>
    </wire>
    <wire loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b31268153b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3126905aa0"/></to>
    </wire>
    <wire loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3126905aa0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3126a09270"/></to>
    </wire>
    <wire loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b312685e640"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b31268153b8"/></to>
    </wire>
    <wire loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b3126860020"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b312688a328"/></to>
    </wire>
    <wire loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b312688a328"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b3126882258"/></to>
    </wire>
    <wire loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b31268607c0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b312688ab80"/></to>
    </wire>
    <wire loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b312688ab80"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b3126882af0"/></to>
    </wire>
    <wire loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b312685f020"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b3126889510"/></to>
    </wire>
    <wire loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b3126889510"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b31268a73c8"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b3126887be0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b31268a3240"/></to>
    </wire>
    <wire loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b31268889d0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b31268a50f0"/></to>
    </wire>
    <wire loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b31268873a0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b31268a5988"/></to>
    </wire>
    <wire loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b31268a27d8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b312636f020"/></to>
    </wire>
    <wire loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b31268a14b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b31262953c8"/></to>
    </wire>
    <wire loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b3126a07450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3126900810"/></to>
    </wire>
    <wire loc="31:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3126900810"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b31269bfa98"/></to>
    </wire>
    <wire loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b31269d7b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b31269176e0"/></to>
    </wire>
    <wire loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b31269176e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126942738"/></to>
    </wire>
    <wire loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b312690a5e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b312693d838"/></to>
    </wire>
    <wire loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b3126911020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b312693b020"/></to>
    </wire>
    <wire loc="93:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3126926598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b3126937938"/></to>
    </wire>
    <wire loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3126926598"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b3126933bf8"/></to>
    </wire>
    <wire loc="95:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3126926598"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b3126956020"/></to>
    </wire>
    <wire loc="27:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b31269d3c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b31269176e0"/></to>
    </wire>
    <wire loc="114:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b3126a5db48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b3126a964b8"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b3126a70400"/></to>
    </wire>
    <wire loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b3126a90358"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b3126363c58"/></to>
    </wire>
    <wire loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b3126a90a38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b31266351e0"/></to>
    </wire>
    <wire loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aafb60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aa3208"/></to>
    </wire>
    <wire loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aa3208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126c330c8"/></to>
    </wire>
    <wire loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3126aa64e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126ac5020"/></to>
    </wire>
    <wire loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b3126a9b980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b3126c25c38"/></to>
    </wire>
    <wire loc="35:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3126ac5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3126bb0020"/></to>
    </wire>
    <wire loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b3126c2d5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126be6290"/></to>
    </wire>
    <wire loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3126be1648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b3126abd838"/></to>
    </wire>
    <wire loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b3126abd838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3126bb07c8"/></to>
    </wire>
    <wire loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3126c24e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b3126abbc80"/></to>
    </wire>
    <wire loc="37:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b3126abbc80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3126bada90"/></to>
    </wire>
    <wire loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b3126bada90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b3127070a90"/></to>
    </wire>
    <wire loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b3126bb0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b3127073060"/></to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b3126bb07c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b3127073808"/></to>
    </wire>
    <wire loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b312706db98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126b2f318"/></to>
    </wire>
    <wire loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3126b2f318"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b3126b4f020"/></to>
    </wire>
    <wire loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b3127068b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b3126b2a558"/></to>
    </wire>
    <wire loc="95:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b3126b2a558"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b3126b4a020"/></to>
    </wire>
    <wire loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3127067e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3126b29980"/></to>
    </wire>
    <wire loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b3126b29980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b3126b49340"/></to>
    </wire>
    <wire loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b31270a7060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b3126b25c38"/></to>
    </wire>
    <wire loc="97:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b3126b25c38"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b3126b46c78"/></to>
    </wire>
    <wire loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b3126bdd5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b3126c28618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b3126c69350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aafb60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <documentation loc="1:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="3:BlinkC.nc" safe="">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TThree" ref="0x2b3126276d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3126231788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TThree" ref="0x2b3126276d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b3126274630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b3126ab7c08"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.TimerMilliC" loc="44(BlinkAppC.TimerMilliC):/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b31263c48c0" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b31263c4c08" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b31263d2020" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b31263d7340" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b31263d76a8" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b31263d7a10" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b31263d7d40" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b3126471568" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b31264718d0" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b3126471c38" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b312646e020" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b3126595020" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b31265b7250" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b31265e48a8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b31269d2590" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b31269d2590"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b31269d28e0" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b31269acd60" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b31269acd60"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b31269e84e8" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b31269e84e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b31269f9758" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b31269f9758"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b31269f6020" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b31269f6020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b31269f63e8" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b31269f63e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b31269f6b60" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b31269f6b60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b31269f5020" loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b31269f57b0" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b31269f57b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b3126a39980" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b3126a39980"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b3126a39cd8" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b3126ab7c08" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b3126ab7c08"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b3126ab4020" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b3126ad6480" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b3126ad6480"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b3126ad6770" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3126ba64a0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3126ba64a0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3126bdb6b0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3126bdb6b0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b3126bdb9c0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3126c26738" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3126c26738"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b31263610e0" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b31263610e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126361430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b3126363c58" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b3126363c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3126362020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b312636fcf0" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b312636fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b312636e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126370080" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126370080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31263703d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b312636f020" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b312636f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b312636f370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b312636f4f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b312636f680"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b312636f808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b312636f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b31263786c0" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b31263786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126378a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126378020" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126378020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126378370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b3126378d88" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b3126378d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126377170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b312637ac00" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b312637ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126384020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b312637a570" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b312637a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b312637a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b31263804f8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b31263804f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126380848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b312638c388" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b312638c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312638c6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312638c860"/>
        <function-ref name="toggle" scoped="" ref="0x2b312638c9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312638cb70"/>
        <function-ref name="get" scoped="" ref="0x2b312638ccf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312638ce80"/>
        <function-ref name="set" scoped="" ref="0x2b3126380030"/>
        <function-ref name="clr" scoped="" ref="0x2b31263801b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b3126381020" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b3126381020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126381370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b31263bc968" loc="98:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b31263bc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263bb0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263bb278"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263bb400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263bb588"/>
        <function-ref name="get" scoped="" ref="0x2b31263bb710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263bb898"/>
        <function-ref name="set" scoped="" ref="0x2b31263bba20"/>
        <function-ref name="clr" scoped="" ref="0x2b31263bbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b31263a04d0" loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b31263a04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a0820"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a09a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a0cb8"/>
        <function-ref name="get" scoped="" ref="0x2b31263a0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b1020"/>
        <function-ref name="set" scoped="" ref="0x2b31263b11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b31263b84d0" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b31263b84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b8820"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b89a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b8cb8"/>
        <function-ref name="get" scoped="" ref="0x2b31263b8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b7020"/>
        <function-ref name="set" scoped="" ref="0x2b31263b71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b31263c11a0" loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b31263c11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263c14f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263c1678"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263c1800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263c1988"/>
        <function-ref name="get" scoped="" ref="0x2b31263c1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263c1c98"/>
        <function-ref name="set" scoped="" ref="0x2b31263c1e20"/>
        <function-ref name="clr" scoped="" ref="0x2b31263c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b31263c8658" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b31263c8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263c89a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263c8b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263c8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263c8e40"/>
        <function-ref name="get" scoped="" ref="0x2b31263c7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263c71a8"/>
        <function-ref name="set" scoped="" ref="0x2b31263c7330"/>
        <function-ref name="clr" scoped="" ref="0x2b31263c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b31263921a0" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b31263921a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263924f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126392678"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126392800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126392988"/>
        <function-ref name="get" scoped="" ref="0x2b3126392b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126392c98"/>
        <function-ref name="set" scoped="" ref="0x2b3126392e20"/>
        <function-ref name="clr" scoped="" ref="0x2b3126391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b31263b2e00" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b31263b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263c31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263c3330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263c34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263c3640"/>
        <function-ref name="get" scoped="" ref="0x2b31263c37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263c3950"/>
        <function-ref name="set" scoped="" ref="0x2b31263c3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263c3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b31263904d0" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b31263904d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126390820"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263909a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126390b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126390cb8"/>
        <function-ref name="get" scoped="" ref="0x2b3126390e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312638e020"/>
        <function-ref name="set" scoped="" ref="0x2b312638e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b312638e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b31263a8658" loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b31263a8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a89a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a8b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a8e40"/>
        <function-ref name="get" scoped="" ref="0x2b31263a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a71a8"/>
        <function-ref name="set" scoped="" ref="0x2b31263a7330"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b31263af968" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b31263af968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263afcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263afe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263ae1a8"/>
        <function-ref name="get" scoped="" ref="0x2b31263ae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263ae4b8"/>
        <function-ref name="set" scoped="" ref="0x2b31263ae640"/>
        <function-ref name="clr" scoped="" ref="0x2b31263ae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b31263b5968" loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b31263b5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b5cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b5e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b41a8"/>
        <function-ref name="get" scoped="" ref="0x2b31263b4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b44b8"/>
        <function-ref name="set" scoped="" ref="0x2b31263b4640"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b3126386968" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b3126386968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126386cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126386e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126385020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263851a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126385330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263854b8"/>
        <function-ref name="set" scoped="" ref="0x2b3126385640"/>
        <function-ref name="clr" scoped="" ref="0x2b31263857c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b312639e968" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b312639e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312639ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312639ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b312639d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312639d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b312639d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312639d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b312639d640"/>
        <function-ref name="clr" scoped="" ref="0x2b312639d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b31263a5af0" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b31263a5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a5e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a4330"/>
        <function-ref name="get" scoped="" ref="0x2b31263a44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a4640"/>
        <function-ref name="set" scoped="" ref="0x2b31263a47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b31263ace00" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b31263ace00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263aa1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263aa330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263aa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263aa640"/>
        <function-ref name="get" scoped="" ref="0x2b31263aa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263aa950"/>
        <function-ref name="set" scoped="" ref="0x2b31263aaad8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263aac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b31263be658" loc="95:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b31263be658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263be9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263beb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263becb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263bee40"/>
        <function-ref name="get" scoped="" ref="0x2b31263bd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263bd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b31263bd330"/>
        <function-ref name="clr" scoped="" ref="0x2b31263bd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b31263ca348" loc="101:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b31263ca348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263ca698"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263ca820"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263ca9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263cab30"/>
        <function-ref name="get" scoped="" ref="0x2b31263cacb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263cae40"/>
        <function-ref name="set" scoped="" ref="0x2b31263c9020"/>
        <function-ref name="clr" scoped="" ref="0x2b31263c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b31263ba1a0" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b31263ba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263ba4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263ba678"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263ba800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263ba988"/>
        <function-ref name="get" scoped="" ref="0x2b31263bab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263bac98"/>
        <function-ref name="set" scoped="" ref="0x2b31263bae20"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b3126395e00" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b3126395e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263941a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126394330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263944b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126394640"/>
        <function-ref name="get" scoped="" ref="0x2b31263947c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126394950"/>
        <function-ref name="set" scoped="" ref="0x2b3126394ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126394c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b312639a020" loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b312639a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312639a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b312639a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312639a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312639a808"/>
        <function-ref name="get" scoped="" ref="0x2b312639a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312639ab18"/>
        <function-ref name="set" scoped="" ref="0x2b312639aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b312639ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b31263cc020" loc="99:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b31263cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263cc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263cc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263cc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263cc808"/>
        <function-ref name="get" scoped="" ref="0x2b31263cc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263ccb18"/>
        <function-ref name="set" scoped="" ref="0x2b31263ccca0"/>
        <function-ref name="clr" scoped="" ref="0x2b31263cce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b3126398348" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b3126398348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126398698"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126398820"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263989a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126398b30"/>
        <function-ref name="get" scoped="" ref="0x2b3126398cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126398e40"/>
        <function-ref name="set" scoped="" ref="0x2b3126397020"/>
        <function-ref name="clr" scoped="" ref="0x2b31263971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b31263b1658" loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b31263b1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b19a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b1b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b1cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b1e40"/>
        <function-ref name="get" scoped="" ref="0x2b31263b0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b01a8"/>
        <function-ref name="set" scoped="" ref="0x2b31263b0330"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b31263b7658" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b31263b7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b79a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b7b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b7e40"/>
        <function-ref name="get" scoped="" ref="0x2b31263b6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b61a8"/>
        <function-ref name="set" scoped="" ref="0x2b31263b6330"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b31263c0348" loc="93:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b31263c0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263c0698"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263c0820"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263c09a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263c0b30"/>
        <function-ref name="get" scoped="" ref="0x2b31263c0cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263c0e40"/>
        <function-ref name="set" scoped="" ref="0x2b31263bf020"/>
        <function-ref name="clr" scoped="" ref="0x2b31263bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b3126391348" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b3126391348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126391698"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126391820"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263919a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126391b30"/>
        <function-ref name="get" scoped="" ref="0x2b3126391cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126391e40"/>
        <function-ref name="set" scoped="" ref="0x2b3126390020"/>
        <function-ref name="clr" scoped="" ref="0x2b31263901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b312638e658" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b312638e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312638e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312638eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b312638ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312638ee40"/>
        <function-ref name="get" scoped="" ref="0x2b312639f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312639f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b312639f330"/>
        <function-ref name="clr" scoped="" ref="0x2b312639f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b31263a77e0" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b31263a77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a7b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a7cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a6020"/>
        <function-ref name="get" scoped="" ref="0x2b31263a61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a6330"/>
        <function-ref name="set" scoped="" ref="0x2b31263a64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b31263aeaf0" loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b31263aeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263aee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263ad020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263ad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263ad330"/>
        <function-ref name="get" scoped="" ref="0x2b31263ad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263ad640"/>
        <function-ref name="set" scoped="" ref="0x2b31263ad7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b31263b4af0" loc="87:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b31263b4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b4e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b3330"/>
        <function-ref name="get" scoped="" ref="0x2b31263b34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b3640"/>
        <function-ref name="set" scoped="" ref="0x2b31263b37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b3126385af0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b3126385af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126385e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126396020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263961a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126396330"/>
        <function-ref name="get" scoped="" ref="0x2b31263964b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126396640"/>
        <function-ref name="set" scoped="" ref="0x2b31263967c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126396950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b312639daf0" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b312639daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312639c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b312639c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312639c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312639c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b312639c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312639c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b312639c950"/>
        <function-ref name="clr" scoped="" ref="0x2b312639cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b31263a4c78" loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b31263a4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a34b8"/>
        <function-ref name="get" scoped="" ref="0x2b31263a3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a37c8"/>
        <function-ref name="set" scoped="" ref="0x2b31263a3950"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b31263bd7e0" loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b31263bd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263bdb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263bdcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263bde40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263bc020"/>
        <function-ref name="get" scoped="" ref="0x2b31263bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263bc330"/>
        <function-ref name="set" scoped="" ref="0x2b31263bc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263bc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b31263a1020" loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b31263a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a1570"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a16f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a1880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a1a08"/>
        <function-ref name="get" scoped="" ref="0x2b31263a1b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a1d18"/>
        <function-ref name="set" scoped="" ref="0x2b31263a0020"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b31263b9348" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b31263b9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b9698"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b9820"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b9b30"/>
        <function-ref name="get" scoped="" ref="0x2b31263b9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b9e40"/>
        <function-ref name="set" scoped="" ref="0x2b31263b8020"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b31263c2020" loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b31263c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263c2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263c24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263c2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263c2808"/>
        <function-ref name="get" scoped="" ref="0x2b31263c2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263c2b18"/>
        <function-ref name="set" scoped="" ref="0x2b31263c2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b31263c2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b31263c94d0" loc="102:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b31263c94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263c9820"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263c99a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263c9b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263c9cb8"/>
        <function-ref name="get" scoped="" ref="0x2b31263c9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263c8020"/>
        <function-ref name="set" scoped="" ref="0x2b31263c81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263c8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b3126393020" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b3126393020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126393370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263934f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126393680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126393808"/>
        <function-ref name="get" scoped="" ref="0x2b3126393990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126393b18"/>
        <function-ref name="set" scoped="" ref="0x2b3126393ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126393e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b31263991a0" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b31263991a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263994f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126399678"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126399800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126399988"/>
        <function-ref name="get" scoped="" ref="0x2b3126399b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126399c98"/>
        <function-ref name="set" scoped="" ref="0x2b3126399e20"/>
        <function-ref name="clr" scoped="" ref="0x2b3126398020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b31263b3c78" loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b31263b3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b24b8"/>
        <function-ref name="get" scoped="" ref="0x2b31263b2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b27c8"/>
        <function-ref name="set" scoped="" ref="0x2b31263b2950"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b31263974d0" loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b31263974d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126397820"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263979a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126397b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126397cb8"/>
        <function-ref name="get" scoped="" ref="0x2b3126397e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a8020"/>
        <function-ref name="set" scoped="" ref="0x2b31263a81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b31263b07e0" loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b31263b07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b0b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263af020"/>
        <function-ref name="get" scoped="" ref="0x2b31263af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263af330"/>
        <function-ref name="set" scoped="" ref="0x2b31263af4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b31263b67e0" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b31263b67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263b6b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263b6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263b6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263b5020"/>
        <function-ref name="get" scoped="" ref="0x2b31263b51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263b5330"/>
        <function-ref name="set" scoped="" ref="0x2b31263b54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263b5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b31263bf4d0" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b31263bf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263bf820"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263bf9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263bfb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263bfcb8"/>
        <function-ref name="get" scoped="" ref="0x2b31263bfe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263be020"/>
        <function-ref name="set" scoped="" ref="0x2b31263be1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b31263837a8" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b31263837a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126383af8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126383c80"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126383e08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126386020"/>
        <function-ref name="get" scoped="" ref="0x2b31263861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126386330"/>
        <function-ref name="set" scoped="" ref="0x2b31263864b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126386640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b312639f7e0" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b312639f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312639fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b312639fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312639fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312639e020"/>
        <function-ref name="get" scoped="" ref="0x2b312639e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312639e330"/>
        <function-ref name="set" scoped="" ref="0x2b312639e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b312639e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b31263a6968" loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b31263a6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a6cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a6e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a51a8"/>
        <function-ref name="get" scoped="" ref="0x2b31263a5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a54b8"/>
        <function-ref name="set" scoped="" ref="0x2b31263a5640"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b31263adc78" loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b31263adc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263ac020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263ac1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263ac330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263ac4b8"/>
        <function-ref name="get" scoped="" ref="0x2b31263ac640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263ac7c8"/>
        <function-ref name="set" scoped="" ref="0x2b31263ac950"/>
        <function-ref name="clr" scoped="" ref="0x2b31263acad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b31263cb1a0" loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b31263cb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263cb4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263cb678"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263cb800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263cb988"/>
        <function-ref name="get" scoped="" ref="0x2b31263cbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263cbc98"/>
        <function-ref name="set" scoped="" ref="0x2b31263cbe20"/>
        <function-ref name="clr" scoped="" ref="0x2b31263ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b31263a9020" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b31263a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a9808"/>
        <function-ref name="get" scoped="" ref="0x2b31263a9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a9b18"/>
        <function-ref name="set" scoped="" ref="0x2b31263a9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b31263a3e00" loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b31263a3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31263a21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263a2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31263a24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263a2640"/>
        <function-ref name="get" scoped="" ref="0x2b31263a27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263a2950"/>
        <function-ref name="set" scoped="" ref="0x2b31263a2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b31263a2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b3126396c78" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b3126396c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126395020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31263951a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126395330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31263954b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126395640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31263957c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126395950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126395ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b312639ce00" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b312639ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312639b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312639b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b312639b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312639b640"/>
        <function-ref name="get" scoped="" ref="0x2b312639b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312639b950"/>
        <function-ref name="set" scoped="" ref="0x2b312639bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b312639bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3126414120" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3126414120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126414470"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264145f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126414780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126414908"/>
        <function-ref name="get" scoped="" ref="0x2b3126414a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126414c18"/>
        <function-ref name="set" scoped="" ref="0x2b3126414da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b31264105b8" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b31264105b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126410908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126410a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126410c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126410da0"/>
        <function-ref name="get" scoped="" ref="0x2b312640f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312640f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b312640f330"/>
        <function-ref name="clr" scoped="" ref="0x2b312640f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3126417dc0" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3126417dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126416170"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264162f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126416480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126416608"/>
        <function-ref name="get" scoped="" ref="0x2b3126416790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126416918"/>
        <function-ref name="set" scoped="" ref="0x2b3126416aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126416c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b31264132a8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b31264132a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264135f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126413780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126413908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126413a90"/>
        <function-ref name="get" scoped="" ref="0x2b3126413c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126413da0"/>
        <function-ref name="set" scoped="" ref="0x2b3126411020"/>
        <function-ref name="clr" scoped="" ref="0x2b31264111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b312640f740" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b312640f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312640fa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b312640fc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b312640fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126422020"/>
        <function-ref name="get" scoped="" ref="0x2b31264221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126422330"/>
        <function-ref name="set" scoped="" ref="0x2b31264224b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126422640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3126415020" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3126415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126415370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264154f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126415680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126415808"/>
        <function-ref name="get" scoped="" ref="0x2b3126415990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126415b18"/>
        <function-ref name="set" scoped="" ref="0x2b3126415ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126415e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3126411430" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3126411430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126411780"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126411908"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126411a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126411c18"/>
        <function-ref name="get" scoped="" ref="0x2b3126411da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126410020"/>
        <function-ref name="set" scoped="" ref="0x2b31264101a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126410330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b31264228c8" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b31264228c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126422c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126422da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126421020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264211a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126421330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264214b8"/>
        <function-ref name="set" scoped="" ref="0x2b3126421640"/>
        <function-ref name="clr" scoped="" ref="0x2b31264217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126c72ca0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126c72ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126c71020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126c711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126c71330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126c714b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126c71640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126c717c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126c71950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126c71ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126caac38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126caac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ca9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ca91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ca9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ca94b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ca9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ca97c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ca9950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ca9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ca7c38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ca7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ca5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ca51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ca5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ca54b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ca5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ca57c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ca5950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ca5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ca3c38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ca3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ca2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ca21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ca2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ca24b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ca2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ca27c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ca2950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ca2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ca0c38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ca0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126c9f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126c9f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126c9f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126c9f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126c9f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126c9f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126c9f950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126c9fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126c9dc38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126c9dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126c9c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126c9c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126c9c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126c9c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126c9c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126c9c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126c9c950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126c9cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126c9ac38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126c9ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126c99020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126c991a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126c99330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126c994b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126c99640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126c997c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126c99950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126c99ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126c97c38" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126c97c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126c96020"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126c961a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126c96330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126c964b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126c96640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126c967c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126c96950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126c96ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3126419bd8" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3126419bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312642c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b312642c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312642c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312642c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b312642c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312642c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b312642c950"/>
        <function-ref name="clr" scoped="" ref="0x2b312642cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3126429020" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3126429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126429370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264294f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126429680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126429808"/>
        <function-ref name="get" scoped="" ref="0x2b3126429990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126429b18"/>
        <function-ref name="set" scoped="" ref="0x2b3126429ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126429e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b312641c930" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b312641c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312641cc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b312641ce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b312641a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312641a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b312641a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312641a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b312641a640"/>
        <function-ref name="clr" scoped="" ref="0x2b312641a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b312642cd60" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b312642cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312642b0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312642b260"/>
        <function-ref name="toggle" scoped="" ref="0x2b312642b3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312642b570"/>
        <function-ref name="get" scoped="" ref="0x2b312642b6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312642b880"/>
        <function-ref name="set" scoped="" ref="0x2b312642ba08"/>
        <function-ref name="clr" scoped="" ref="0x2b312642bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3126428120" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3126428120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126428470"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264285f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126428780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126428908"/>
        <function-ref name="get" scoped="" ref="0x2b3126428a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126428c18"/>
        <function-ref name="set" scoped="" ref="0x2b3126428da0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126427020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b312641aa50" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b312641aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312641ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126419020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264191a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126419330"/>
        <function-ref name="get" scoped="" ref="0x2b31264194b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126419640"/>
        <function-ref name="set" scoped="" ref="0x2b31264197c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126419950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b312642be18" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b312642be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312642a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312642a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b312642a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312642a640"/>
        <function-ref name="get" scoped="" ref="0x2b312642a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312642a950"/>
        <function-ref name="set" scoped="" ref="0x2b312642aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b312642ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b31264272a8" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b31264272a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264275f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126427780"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126427908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126427a90"/>
        <function-ref name="get" scoped="" ref="0x2b3126427c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126427da0"/>
        <function-ref name="set" scoped="" ref="0x2b3126426020"/>
        <function-ref name="clr" scoped="" ref="0x2b31264261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ce7180" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ce7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ce74d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ce7658"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ce77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ce7968"/>
        <function-ref name="get" scoped="" ref="0x2b3126ce7af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ce7c78"/>
        <function-ref name="set" scoped="" ref="0x2b3126ce7e00"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ce6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ce4100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ce4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ce4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ce45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ce4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ce48e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ce4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ce4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ce4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ce1100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ce1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ce1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ce15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ce1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ce18e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ce1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ce1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ce1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d14100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d14100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d14450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d145d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d14760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d148e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d14a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d14bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d14d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d11100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d11100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d11450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d115d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d11760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d118e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d11a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d11bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d11d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d0e100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d0e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d0e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d0e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d0e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d0e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d0ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d0ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d0ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d0b100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d0b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d0b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d0b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d0b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d0ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d0bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d0bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d08100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d08100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d08450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d085d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d08760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d088e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d08a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d08bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d08d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3126432740" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3126432740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126432a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126432c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126432da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126431020"/>
        <function-ref name="get" scoped="" ref="0x2b31264311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126431330"/>
        <function-ref name="set" scoped="" ref="0x2b31264314b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126431640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b312642fbd8" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b312642fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312642e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b312642e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312642e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312642e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b312642e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312642e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b312642e950"/>
        <function-ref name="clr" scoped="" ref="0x2b312642ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3126434500" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3126434500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126434850"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264349d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126434b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126434ce8"/>
        <function-ref name="get" scoped="" ref="0x2b3126434e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126433020"/>
        <function-ref name="set" scoped="" ref="0x2b31264331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126433330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b31264318c8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b31264318c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126431c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126431da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126430020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264301a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126430330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264304b8"/>
        <function-ref name="set" scoped="" ref="0x2b3126430640"/>
        <function-ref name="clr" scoped="" ref="0x2b31264307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b312642ed60" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b312642ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312642d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312642d260"/>
        <function-ref name="toggle" scoped="" ref="0x2b312642d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312642d570"/>
        <function-ref name="get" scoped="" ref="0x2b312642d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312642d880"/>
        <function-ref name="set" scoped="" ref="0x2b312642da08"/>
        <function-ref name="clr" scoped="" ref="0x2b312642db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b31264335b8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b31264335b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126433908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126433a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126433c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126433da0"/>
        <function-ref name="get" scoped="" ref="0x2b3126432020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264321a8"/>
        <function-ref name="set" scoped="" ref="0x2b3126432330"/>
        <function-ref name="clr" scoped="" ref="0x2b31264324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3126430a50" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3126430a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126430da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b312642f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b312642f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312642f330"/>
        <function-ref name="get" scoped="" ref="0x2b312642f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312642f640"/>
        <function-ref name="set" scoped="" ref="0x2b312642f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b312642f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b312642de18" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b312642de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264401a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126440330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264404b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126440640"/>
        <function-ref name="get" scoped="" ref="0x2b31264407c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126440950"/>
        <function-ref name="set" scoped="" ref="0x2b3126440ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126440c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d5f180" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d5f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d5f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d5f658"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d5f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d5f968"/>
        <function-ref name="get" scoped="" ref="0x2b3126d5faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d5fc78"/>
        <function-ref name="set" scoped="" ref="0x2b3126d5fe00"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d5c100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d5c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d5c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d5c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d5c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d5c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d5ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d5cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d5cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d59100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d59100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d59450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d595d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d59760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d598e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d59a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d59bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d59d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d56100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d56450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d565d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d56760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d568e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d56a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d56bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d56d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d52100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d52100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d52450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d525d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d52760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d528e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d52a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d52bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d52d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d87100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d87100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d87450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d875d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d87760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d878e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d87a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d87bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d87d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d84100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d84100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d84450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d845d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d84760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d848e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d84a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d84bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d84d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126d81100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126d81100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126d81450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126d815d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126d81760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126d818e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126d81a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126d81bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126d81d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126d80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3126437120" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3126437120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126437470"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264375f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126437780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126437908"/>
        <function-ref name="get" scoped="" ref="0x2b3126437a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126437c18"/>
        <function-ref name="set" scoped="" ref="0x2b3126437da0"/>
        <function-ref name="clr" scoped="" ref="0x2b312644a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b31264485b8" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b31264485b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126448908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126448a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126448c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126448da0"/>
        <function-ref name="get" scoped="" ref="0x2b3126446020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264461a8"/>
        <function-ref name="set" scoped="" ref="0x2b3126446330"/>
        <function-ref name="clr" scoped="" ref="0x2b31264464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b312643ae40" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b312643ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264391c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126439348"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264394d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126439658"/>
        <function-ref name="get" scoped="" ref="0x2b31264397e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126439968"/>
        <function-ref name="set" scoped="" ref="0x2b3126439af0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126439c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b312644a2a8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b312644a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312644a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312644a780"/>
        <function-ref name="toggle" scoped="" ref="0x2b312644a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312644aa90"/>
        <function-ref name="get" scoped="" ref="0x2b312644ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312644ada0"/>
        <function-ref name="set" scoped="" ref="0x2b3126449020"/>
        <function-ref name="clr" scoped="" ref="0x2b31264491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3126446740" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3126446740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126446a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126446c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126446da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126445020"/>
        <function-ref name="get" scoped="" ref="0x2b31264451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126445330"/>
        <function-ref name="set" scoped="" ref="0x2b31264454b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126445640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3126438020" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3126438020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126438370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264384f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126438680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126438808"/>
        <function-ref name="get" scoped="" ref="0x2b3126438990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126438b18"/>
        <function-ref name="set" scoped="" ref="0x2b3126438ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126438e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3126449430" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3126449430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126449780"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126449908"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126449a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126449c18"/>
        <function-ref name="get" scoped="" ref="0x2b3126449da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126448020"/>
        <function-ref name="set" scoped="" ref="0x2b31264481a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126448330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b31264458c8" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b31264458c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126445c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126445da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126444020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264441a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126444330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264444b8"/>
        <function-ref name="set" scoped="" ref="0x2b3126444640"/>
        <function-ref name="clr" scoped="" ref="0x2b31264447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ddd180" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ddd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ddd4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ddd658"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ddd7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ddd968"/>
        <function-ref name="get" scoped="" ref="0x2b3126dddaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dddc78"/>
        <function-ref name="set" scoped="" ref="0x2b3126ddde00"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ddc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dda100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dda100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dda450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dda5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dda760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dda8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ddaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ddabf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ddad80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dd7100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dd7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dd7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dd75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dd7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dd78e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126dd7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dd7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126dd7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dd4100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dd4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dd4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dd45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dd4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dd48e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126dd4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dd4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126dd4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dd0100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dd0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dd0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dd05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dd0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dd08e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126dd0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dd0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126dd0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dcd100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dcd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dcd450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dcd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dcd760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dcd8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126dcda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dcdbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126dcdd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dca100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dca100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dca450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dca5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dca760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dca8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126dcaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dcabf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126dcad80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126dc7100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126dc7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126dc7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126dc75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126dc7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126dc78e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126dc7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126dc7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126dc7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126dc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3126451bd8" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3126451bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312644f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b312644f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312644f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312644f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b312644f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312644f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b312644f950"/>
        <function-ref name="clr" scoped="" ref="0x2b312644fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b312644c020" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b312644c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312644c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b312644c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312644c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312644c808"/>
        <function-ref name="get" scoped="" ref="0x2b312644c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312644cb18"/>
        <function-ref name="set" scoped="" ref="0x2b312644cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b312644ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3126453930" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3126453930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126453c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126453e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126452020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264521a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126452330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264524b8"/>
        <function-ref name="set" scoped="" ref="0x2b3126452640"/>
        <function-ref name="clr" scoped="" ref="0x2b31264527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b312644fd60" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b312644fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312644e0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312644e260"/>
        <function-ref name="toggle" scoped="" ref="0x2b312644e3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312644e570"/>
        <function-ref name="get" scoped="" ref="0x2b312644e6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312644e880"/>
        <function-ref name="set" scoped="" ref="0x2b312644ea08"/>
        <function-ref name="clr" scoped="" ref="0x2b312644eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b312644b120" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b312644b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312644b470"/>
        <function-ref name="isInput" scoped="" ref="0x2b312644b5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312644b780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312644b908"/>
        <function-ref name="get" scoped="" ref="0x2b312644ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312644bc18"/>
        <function-ref name="set" scoped="" ref="0x2b312644bda0"/>
        <function-ref name="clr" scoped="" ref="0x2b312645e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b3126452a50" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b3126452a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126452da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126451020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264511a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126451330"/>
        <function-ref name="get" scoped="" ref="0x2b31264514b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126451640"/>
        <function-ref name="set" scoped="" ref="0x2b31264517c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126451950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b312644ee18" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b312644ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312644d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312644d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b312644d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312644d640"/>
        <function-ref name="get" scoped="" ref="0x2b312644d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312644d950"/>
        <function-ref name="set" scoped="" ref="0x2b312644dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b312644dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b312645e2a8" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b312645e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312645e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b312645e780"/>
        <function-ref name="toggle" scoped="" ref="0x2b312645e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312645ea90"/>
        <function-ref name="get" scoped="" ref="0x2b312645ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312645eda0"/>
        <function-ref name="set" scoped="" ref="0x2b312645d020"/>
        <function-ref name="clr" scoped="" ref="0x2b312645d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e27180" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e27180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e274d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e27658"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e277e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e27968"/>
        <function-ref name="get" scoped="" ref="0x2b3126e27af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e27c78"/>
        <function-ref name="set" scoped="" ref="0x2b3126e27e00"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e24100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e24100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e24450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e245d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e24760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e248e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e24a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e24bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e24d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e21100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e21100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e21450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e215d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e21760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e218e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e21a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e21bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e21d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e1e100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e1e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e1e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e1e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e1e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e1e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e1ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e1ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e1ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e1b100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e1b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e1b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e1b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e1b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e1b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e1ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e1bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e1bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e53100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e53450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e535d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e53760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e538e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e53a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e53bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e53d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e50100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e50100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e50450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e505d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e50760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e508e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e50a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e50bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e50d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e4d100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e4d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e4d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e4d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e4d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e4d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e4da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e4dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e4dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b3126455740" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b3126455740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126455a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126455c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126455da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126468020"/>
        <function-ref name="get" scoped="" ref="0x2b31264681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126468330"/>
        <function-ref name="set" scoped="" ref="0x2b31264684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126468640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b3126466bd8" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b3126466bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126465020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126465330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264654b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126465640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264657c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126465950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126465ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b3126457500" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b3126457500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126457850"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264579d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126457b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126457ce8"/>
        <function-ref name="get" scoped="" ref="0x2b3126457e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126456020"/>
        <function-ref name="set" scoped="" ref="0x2b31264561a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126456330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b31264688c8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b31264688c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126468c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126468da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126467020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264671a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126467330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264674b8"/>
        <function-ref name="set" scoped="" ref="0x2b3126467640"/>
        <function-ref name="clr" scoped="" ref="0x2b31264677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b3126465d60" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b3126465d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264640d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126464260"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264643e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126464570"/>
        <function-ref name="get" scoped="" ref="0x2b31264646f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126464880"/>
        <function-ref name="set" scoped="" ref="0x2b3126464a08"/>
        <function-ref name="clr" scoped="" ref="0x2b3126464b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b31264565b8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b31264565b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126456908"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126456a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126456c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126456da0"/>
        <function-ref name="get" scoped="" ref="0x2b3126455020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264551a8"/>
        <function-ref name="set" scoped="" ref="0x2b3126455330"/>
        <function-ref name="clr" scoped="" ref="0x2b31264554b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b3126467a50" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b3126467a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126467da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126466020"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264661a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126466330"/>
        <function-ref name="get" scoped="" ref="0x2b31264664b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126466640"/>
        <function-ref name="set" scoped="" ref="0x2b31264667c8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126466950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b3126464e18" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b3126464e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264631a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126463330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264634b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126463640"/>
        <function-ref name="get" scoped="" ref="0x2b31264637c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126463950"/>
        <function-ref name="set" scoped="" ref="0x2b3126463ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126463c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e75180" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e75180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e754d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e75658"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e757e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e75968"/>
        <function-ref name="get" scoped="" ref="0x2b3126e75af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e75c78"/>
        <function-ref name="set" scoped="" ref="0x2b3126e75e00"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126eb0100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126eb0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126eb0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126eb05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126eb0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126eb08e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126eb0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126eb0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126eb0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126eaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ead100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ead100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ead450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ead5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ead760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ead8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126eada70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126eadbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126eadd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126eac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126eaa100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126eaa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126eaa450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126eaa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126eaa760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126eaa8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126eaaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126eaabf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126eaad80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ea9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ea7100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ea7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ea7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ea75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ea7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ea78e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ea7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ea7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ea7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ea5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ea3100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ea3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ea3450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ea35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ea3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ea38e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ea3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ea3bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ea3d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126ea0100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126ea0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126ea0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126ea05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126ea0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126ea08e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126ea0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126ea0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126ea0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126e9d100" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126e9d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126e9d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126e9d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126e9d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126e9d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b3126e9da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126e9dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b3126e9dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b3126e9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b312646f3e0" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b312646f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312646f730"/>
        <function-ref name="isInput" scoped="" ref="0x2b312646f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312646fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312646fbc8"/>
        <function-ref name="get" scoped="" ref="0x2b312646fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126484020"/>
        <function-ref name="set" scoped="" ref="0x2b31264841a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126484330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126481c38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126481c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126480020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264801a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126480330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264804b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126480640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264807c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126480950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126480ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264913e0" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126491730"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264918b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126491a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126491bc8"/>
        <function-ref name="get" scoped="" ref="0x2b3126491d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126490020"/>
        <function-ref name="set" scoped="" ref="0x2b31264901a8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126490330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b312648dc38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b312648dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312648c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b312648c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312648c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312648c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b312648c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312648c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b312648c950"/>
        <function-ref name="clr" scoped="" ref="0x2b312648cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b312649d3e0" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b312649d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312649d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b312649d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b312649da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312649dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b312649dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312649c020"/>
        <function-ref name="set" scoped="" ref="0x2b312649c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b312649c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b3126498c38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b3126498c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126497020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264971a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126497330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264974b8"/>
        <function-ref name="get" scoped="" ref="0x2b3126497640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264977c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126497950"/>
        <function-ref name="clr" scoped="" ref="0x2b3126497ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264a9480" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264a9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264a97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264a9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264a9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264a9c68"/>
        <function-ref name="get" scoped="" ref="0x2b31264a9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264a8020"/>
        <function-ref name="set" scoped="" ref="0x2b31264a81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31264a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264a4c38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264a4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264a3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264a31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264a3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264a34b8"/>
        <function-ref name="get" scoped="" ref="0x2b31264a3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264a37c8"/>
        <function-ref name="set" scoped="" ref="0x2b31264a3950"/>
        <function-ref name="clr" scoped="" ref="0x2b31264a3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264b4520" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264b4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264b4870"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264b49f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264b4b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264b4d08"/>
        <function-ref name="get" scoped="" ref="0x2b31264b3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264b31a8"/>
        <function-ref name="set" scoped="" ref="0x2b31264b3330"/>
        <function-ref name="clr" scoped="" ref="0x2b31264b34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264b0cd8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264b0cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264af228"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264af3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264af538"/>
        <function-ref name="get" scoped="" ref="0x2b31264af6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264af848"/>
        <function-ref name="set" scoped="" ref="0x2b31264af9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b31264afb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264aa3e0" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264aa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264aa730"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264aa8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264aaa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264aabc8"/>
        <function-ref name="get" scoped="" ref="0x2b31264aad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264bf020"/>
        <function-ref name="set" scoped="" ref="0x2b31264bf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31264bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264bbc38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264bbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264ba020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264ba1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264ba330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264ba4b8"/>
        <function-ref name="get" scoped="" ref="0x2b31264ba640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264ba7c8"/>
        <function-ref name="set" scoped="" ref="0x2b31264ba950"/>
        <function-ref name="clr" scoped="" ref="0x2b31264baad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264b63e0" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264b63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264b6730"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264b68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264b6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264b6bc8"/>
        <function-ref name="get" scoped="" ref="0x2b31264b6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264b5020"/>
        <function-ref name="set" scoped="" ref="0x2b31264b51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b31264b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b31264c7c38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b31264c7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31264c6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b31264c61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b31264c6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b31264c64b8"/>
        <function-ref name="get" scoped="" ref="0x2b31264c6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b31264c67c8"/>
        <function-ref name="set" scoped="" ref="0x2b31264c6950"/>
        <function-ref name="clr" scoped="" ref="0x2b31264c6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b31264fa4b0" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b31264fa4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b31261a4128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b31261a4128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31264fa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b31264faae0" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b31264faae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b31264fae30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b31264f9020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b31264f91a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b31264f9330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b31264f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b3126522418" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b3126522418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126522768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b3126371c50" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b3126371c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3126523020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b3126523ce0" loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b3126523ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31265220a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b3126523308" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b3126523308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126523658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b31265237e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3126523968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b31261c7b18" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b31261c7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b31261c7e68"/>
        <function-ref name="runTask" scoped="" ref="0x2b312619f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b31261c60d0" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b31261c60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31261c6420"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b31261c65a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b31261c6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b3126270c58" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b3126270c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b312627d020"/>
        <function-ref name="runTask" scoped="" ref="0x2b312627d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b312627a168" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b312627a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b312627a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b3126271d88" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b3126271d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126270170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b31262702f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b3126270480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b3126294988" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3126294988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b3126294cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b31261bce40" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b31261bce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b31262991c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b31262953c8" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b31262953c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b3126295718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b312653add0" loc="5:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b312653add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b31265370c0"/>
        <function-ref name="fired" scoped="" ref="0x2b312652b798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b31265394d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126539088"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126537960"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126537510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b312652bbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b312652c9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126539aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b312652ce80"/>
        <function-ref name="stop" scoped="" ref="0x2b312652b348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b31265422d8" loc="10:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b31265422d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3126542628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b3126536020" loc="6:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b3126536020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b31265322b8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126535978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b31265346c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126534278"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126532b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126532708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126535dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126536b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126534c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126535088"/>
        <function-ref name="stop" scoped="" ref="0x2b3126535528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3126556c38" loc="9:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3126556c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3126543020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b31265431a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b3126543330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b31265434b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3126543640"/>
        <function-ref name="get" scoped="" ref="0x2b31265437c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3126543950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3126542020"/>
        <function-ref name="set" scoped="" ref="0x2b3126543ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b3126543c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b3126543de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2b31265491d0" loc="7:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2b31265491d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b31265455f0"/>
        <function-ref name="fired" scoped="" ref="0x2b3126548af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b31265478c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126547470"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126544020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126545a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126547020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126549d18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126545020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126548200"/>
        <function-ref name="stop" scoped="" ref="0x2b31265486a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b312652dd08" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b312652dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b31265610a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3126561228"/>
        <function-ref name="led1On" scoped="" ref="0x2b31265613b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3126561538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b31265616c0"/>
        <function-ref name="get" scoped="" ref="0x2b3126561848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b31265619d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3126560020"/>
        <function-ref name="set" scoped="" ref="0x2b3126561b58"/>
        <function-ref name="led0On" scoped="" ref="0x2b3126561ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b3126561e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b312655cce8" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b312655cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b312655b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b312655b228"/>
        <function-ref name="toggle" scoped="" ref="0x2b312655b3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b312655b538"/>
        <function-ref name="get" scoped="" ref="0x2b312655b6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b312655b848"/>
        <function-ref name="set" scoped="" ref="0x2b312655b9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b312655bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b312655d020" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b312655d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b312655d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b312655be70" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b312655be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31265721e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126572370"/>
        <function-ref name="toggle" scoped="" ref="0x2b31265724f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126572680"/>
        <function-ref name="get" scoped="" ref="0x2b3126572808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126572990"/>
        <function-ref name="set" scoped="" ref="0x2b3126572b18"/>
        <function-ref name="clr" scoped="" ref="0x2b3126572ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b312655d5e8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b312655d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b312655d938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b312655dac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b312655dc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b312655ddd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b312655c020"/>
        <function-ref name="get" scoped="" ref="0x2b312655c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b312655c330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b312655c950"/>
        <function-ref name="set" scoped="" ref="0x2b312655c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b312655c640"/>
        <function-ref name="led2On" scoped="" ref="0x2b312655c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b3126571020" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b3126571020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126571370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31265714f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126571680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126571808"/>
        <function-ref name="get" scoped="" ref="0x2b3126571990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126571b18"/>
        <function-ref name="set" scoped="" ref="0x2b3126571ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126571e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b312655ee28" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b312655ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b31265881a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126588330"/>
        <function-ref name="toggle" scoped="" ref="0x2b31265884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126588640"/>
        <function-ref name="get" scoped="" ref="0x2b31265887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126588950"/>
        <function-ref name="set" scoped="" ref="0x2b3126588ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b3126588c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b3126587020" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b3126587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126587370"/>
        <function-ref name="isInput" scoped="" ref="0x2b31265874f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126587680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126587808"/>
        <function-ref name="get" scoped="" ref="0x2b3126587990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126587b18"/>
        <function-ref name="set" scoped="" ref="0x2b3126587ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b3126587e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b31265852d8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b31265852d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126585628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b31265861b0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b31265861b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b3126586500"/>
        <function-ref name="isInput" scoped="" ref="0x2b3126586688"/>
        <function-ref name="toggle" scoped="" ref="0x2b3126586810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b3126586998"/>
        <function-ref name="get" scoped="" ref="0x2b3126586b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b3126586ca8"/>
        <function-ref name="set" scoped="" ref="0x2b3126586e30"/>
        <function-ref name="clr" scoped="" ref="0x2b3126585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3126a3f800" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b3126a3f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126a3fb50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126a3fcd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126a3fe60"/>
        <function-ref name="cancel" scoped="" ref="0x2b3126a3e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126a3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b3126a3e3f0" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b3126a3e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3126a3e740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3126a3e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126a3ea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126a3ebd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3126a3ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3126a3d020" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b3126a3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3126a3d370"/>
        <function-ref name="source" scoped="" ref="0x2b3126a3d4f8"/>
        <function-ref name="address" scoped="" ref="0x2b3126a3d680"/>
        <function-ref name="destination" scoped="" ref="0x2b3126a3d808"/>
        <function-ref name="setSource" scoped="" ref="0x2b3126a3d990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3126a3db18"/>
        <function-ref name="type" scoped="" ref="0x2b3126a3dca0"/>
        <function-ref name="setType" scoped="" ref="0x2b3126a3de28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3126a3c020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3126a3c1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3126a3c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b3126a3c5b8" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b3126a3c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b3126a3c908"/>
        <function-ref name="noAck" scoped="" ref="0x2b3126a3ca90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3126a3cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3126f9b990" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b3126f9b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126f9bce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126f9be68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126f9a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b3126f9a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126f9a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b3126f9a5d8" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b3126f9a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126f9a928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126f9aab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126f9ac38"/>
        <function-ref name="cancel" scoped="" ref="0x2b3126f9adc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126f99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b3126f99268" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b3126f99268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3126f995b8"/>
        <function-ref name="source" scoped="" ref="0x2b3126f99740"/>
        <function-ref name="address" scoped="" ref="0x2b3126f998c8"/>
        <function-ref name="destination" scoped="" ref="0x2b3126f99a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b3126f99bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3126f99d60"/>
        <function-ref name="type" scoped="" ref="0x2b3126f98020"/>
        <function-ref name="setType" scoped="" ref="0x2b3126f981a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3126f98330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3126f984b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3126f98640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b31265e75d8" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b31265e75d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b31265e7928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b31265e7ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b31265e7c38"/>
        <function-ref name="cancel" scoped="" ref="0x2b31265e7dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b31265e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b31266276f8" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b31266276f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126627a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126627bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126627d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b3126626020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b31266261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3126628920" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b3126628920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126628c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126628e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126627020"/>
        <function-ref name="cancel" scoped="" ref="0x2b31266271a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126627330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b3126625a10" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b3126625a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3126625d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3126624020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b31266241a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126624330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b31266244b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b3126624780" loc="169:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b3126624780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3126624ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b3126624c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b3126623020" loc="126:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b3126623020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3126623370"/>
        <function-ref name="runTask" scoped="" ref="0x2b31266234f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b31266263f0" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b31266263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3126626740"/>
        <function-ref name="source" scoped="" ref="0x2b31266268c8"/>
        <function-ref name="address" scoped="" ref="0x2b3126626a50"/>
        <function-ref name="destination" scoped="" ref="0x2b3126626bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b3126626d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3126625020"/>
        <function-ref name="type" scoped="" ref="0x2b31266251a8"/>
        <function-ref name="setType" scoped="" ref="0x2b3126625330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b31266254b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b3126625640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b31266257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b31266351e0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b31266351e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3126635530"/>
        <function-ref name="stopDone" scoped="" ref="0x2b31266356b8"/>
        <function-ref name="start" scoped="" ref="0x2b3126635840"/>
        <function-ref name="stop" scoped="" ref="0x2b31266359c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b312663a1c8" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b312663a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b312663a518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b312663a6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b312663a828"/>
        <function-ref name="cancel" scoped="" ref="0x2b312663a9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b312663ab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b31266342a8" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b31266342a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b31266345f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3126634780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126634908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126634a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3126634c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b312662fc40" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b312662fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3126634020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b312662e020" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b312662e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b312662e370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b312662e4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b312662e680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b312662e808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b312662e990"/>
        <function-ref name="get" scoped="" ref="0x2b312662eb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b312662eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b312662d330"/>
        <function-ref name="set" scoped="" ref="0x2b312662ee28"/>
        <function-ref name="led0On" scoped="" ref="0x2b312662d020"/>
        <function-ref name="led2On" scoped="" ref="0x2b312662d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b3126630658" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b3126630658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b31266309a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b3126630b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b3126630cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3126633020" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b3126633020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3126633370"/>
        <function-ref name="source" scoped="" ref="0x2b31266334f8"/>
        <function-ref name="address" scoped="" ref="0x2b3126633680"/>
        <function-ref name="destination" scoped="" ref="0x2b3126633808"/>
        <function-ref name="setSource" scoped="" ref="0x2b3126633990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b3126633b18"/>
        <function-ref name="type" scoped="" ref="0x2b3126633ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b3126633e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b3126630020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b31266301a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b3126630330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b312669d308" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b312669d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b312669d658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b312669d7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b312669d968"/>
        <function-ref name="cancel" scoped="" ref="0x2b312669daf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b312669dc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b312669c020" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b312669c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b312669c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b3126647460" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b3126647460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b31266477d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126647958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126647ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b3126647c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126647df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b312669fd20" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b312669fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b312669e0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b312669e228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b312669e3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b312669e538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b312669e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3126683180" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b3126683180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b31266834f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b312669e908" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b312669e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b312669ec58"/>
        <function-ref name="noAck" scoped="" ref="0x2b312669ede0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b312669d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b3126683738" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b3126683738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b3126683a88"/>
        <function-ref name="source" scoped="" ref="0x2b3126683c10"/>
        <function-ref name="address" scoped="" ref="0x2b3126683d98"/>
        <function-ref name="destination" scoped="" ref="0x2b312669f020"/>
        <function-ref name="setSource" scoped="" ref="0x2b312669f1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b312669f330"/>
        <function-ref name="type" scoped="" ref="0x2b312669f4b8"/>
        <function-ref name="setType" scoped="" ref="0x2b312669f640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b312669f7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b312669f950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b312669fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b3126698748" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b3126698748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3126698a98"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3126698c20"/>
        <function-ref name="start" scoped="" ref="0x2b3126698da8"/>
        <function-ref name="stop" scoped="" ref="0x2b3126697020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b3126696208" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b3126696208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b31263578b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126696558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b31266966e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126696868"/>
        <function-ref name="cancel" scoped="" ref="0x2b31266969f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126696b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126698130" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126698130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126698480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b3126697760" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b3126697760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b31263578b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b3126697ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b31266948f8" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b31266948f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3126694c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3126694dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b3126693020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b31266931a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3126693330"/>
        <function-ref name="get" scoped="" ref="0x2b31266934b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3126693640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3126693c60"/>
        <function-ref name="set" scoped="" ref="0x2b31266937c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b3126693950"/>
        <function-ref name="led2On" scoped="" ref="0x2b3126693ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b3126694020" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b3126694020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b31263578b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b3126694370"/>
        <function-ref name="offset" scoped="" ref="0x2b31266944f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b3126694680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b31266cbda8" loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b31266cbda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b31266ca170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b31266ca2f8"/>
        <function-ref name="start" scoped="" ref="0x2b31266ca480"/>
        <function-ref name="stop" scoped="" ref="0x2b31266ca608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b312671e830" loc="332:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b312671e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b312671eb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b312671ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b31266d4e18" loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b31266d4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31266d61a8"/>
        <function-ref name="stop" scoped="" ref="0x2b31266d6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b31266f6d70" loc="191:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b31266f6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b31266f50f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b31266f5278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b31266cb790" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b31266cb790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31266cbae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b31266d2a10" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b31266d2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b31266d2d60"/>
        <function-ref name="flush" scoped="" ref="0x2b31266d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b3126721020" loc="322:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b3126721020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3126721370"/>
        <function-ref name="runTask" scoped="" ref="0x2b31267214f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b31266c0020" loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b31266c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b31266c0370"/>
        <function-ref name="resetSend" scoped="" ref="0x2b31266c04f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b31266c0680"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b31266c0808"/>
        <function-ref name="putData" scoped="" ref="0x2b31266c0990"/>
        <function-ref name="putDone" scoped="" ref="0x2b31266c0b18"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b31266c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b31266bf020" loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b31266bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b31266bf370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b31266bf4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b31266bf680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b31266bf808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b31266bf990"/>
        <function-ref name="get" scoped="" ref="0x2b31266bfb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b31266bfca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b31266d7330"/>
        <function-ref name="set" scoped="" ref="0x2b31266bfe28"/>
        <function-ref name="led0On" scoped="" ref="0x2b31266d7020"/>
        <function-ref name="led2On" scoped="" ref="0x2b31266d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b312671b918" loc="341:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b312671b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b312671bc68"/>
        <function-ref name="runTask" scoped="" ref="0x2b312671bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b31266c4950" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b31266c4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b31266c4ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b31266c4e28"/>
        <function-ref name="startSend" scoped="" ref="0x2b31266c9020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b31266c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b31266c8020" loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b31266c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b31266c8370"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b31266c84f8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b31266c8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b31267e4100" loc="275:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b31267e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b31267e4450"/>
        <function-ref name="runTask" scoped="" ref="0x2b31267e45d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b31267e8020" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b31267e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b31263578b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b31267e8390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b31267e8518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b31267e86a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b31267e8828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b31267e89b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b31267e48a0" loc="158:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b31267e48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b31267e4bf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b31267e4d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b31267e9868" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b31267e9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b31263578b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b31267e9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b31267e8db8" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b31267e8db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b31263578b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b31267e7170"/>
        <function-ref name="offset" scoped="" ref="0x2b31267e72f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b31267e7480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b31267e6a50" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b31267e6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b31267e6da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b31267e5020"/>
        <function-ref name="led1On" scoped="" ref="0x2b31267e51a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b31267e5330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b31267e54b8"/>
        <function-ref name="get" scoped="" ref="0x2b31267e5640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b31267e57c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b31267e5de8"/>
        <function-ref name="set" scoped="" ref="0x2b31267e5ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b31267e5950"/>
        <function-ref name="led0On" scoped="" ref="0x2b31267e5c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b31267e6020" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b31267e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b31267e6370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b31267e64f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b31267e6680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b31267e6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b31267e76c8" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b31267e76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b31267e7a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b31267e7ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b31267e7d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b31267f4448" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b31267f4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b31267f4798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b31267f4920"/>
        <function-ref name="receive" scoped="" ref="0x2b31267f4aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b31267f4c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b31267f4db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3126801020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b31268011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b31267e2b48" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b31267e2b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b3126802020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b31268021a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b3126802330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b31268024b8"/>
        <function-ref name="putData" scoped="" ref="0x2b3126802640"/>
        <function-ref name="putDone" scoped="" ref="0x2b31268027c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b3126802950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3126801420" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3126801420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3126801770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b31268018f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b3126801a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3126801c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3126801d90"/>
        <function-ref name="get" scoped="" ref="0x2b3126800020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b31268001a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b31268007c8"/>
        <function-ref name="set" scoped="" ref="0x2b3126800330"/>
        <function-ref name="led0On" scoped="" ref="0x2b31268004b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b3126800640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b312681d290" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b312681d290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b312681d5e0"/>
        <function-ref name="receive" scoped="" ref="0x2b312681d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b31268230c0" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b31268230c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126823410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b3126823598"/>
        <function-ref name="receive" scoped="" ref="0x2b3126823720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b31268238a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3126823a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3126823bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126823d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b31267e18c8" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b31267e18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31267e1c18"/>
        <function-ref name="stop" scoped="" ref="0x2b31267e1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b3126821b08" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b3126821b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126821e58"/>
        <function-ref name="receive" scoped="" ref="0x2b312681c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b312681c310" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b312681c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b312681c660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b312681c7e8"/>
        <function-ref name="receive" scoped="" ref="0x2b312681c970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b312681caf8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b312681cc80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b312681ce08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b312681a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b31268153b8" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b31268153b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3126231788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126819130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126819a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b31268195b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126838020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3126821350" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b3126821350"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31268216a0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126821828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b3126862780" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b3126862780"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126862ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b3126862c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b3126860020" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b3126860020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3126860370"/>
        <function-ref name="stop" scoped="" ref="0x2b31268604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b31268369f0" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b31268369f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126836d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b3126861020" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b3126861020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126861370"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b31268614f8"/>
        <function-ref name="receive" scoped="" ref="0x2b3126861680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b3126861808"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b3126861990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b3126861b18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126861ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b312685e640" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b312685e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3126231788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b31268813f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126881d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126881878"/>
        <function-ref name="overflow" scoped="" ref="0x2b31268801f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b312685f020" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b312685f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b312685f370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b312685f4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b312685f680"/>
        <function-ref name="txDone" scoped="" ref="0x2b312685f808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b312685f990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b312685fb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b312685fca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b312685fe28"/>
        <function-ref name="tx" scoped="" ref="0x2b312685e020"/>
        <function-ref name="rx" scoped="" ref="0x2b312685e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b3126862020" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b3126862020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3126862370"/>
        <function-ref name="stop" scoped="" ref="0x2b31268624f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b31268607c0" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b31268607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3126860b10"/>
        <function-ref name="stop" scoped="" ref="0x2b3126860c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b3126889510" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b3126889510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3126889860"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b31268899e8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b3126889b70"/>
        <function-ref name="txDone" scoped="" ref="0x2b3126889cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3126889e80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b3126888030"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b31268881b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b3126888340"/>
        <function-ref name="tx" scoped="" ref="0x2b31268884c8"/>
        <function-ref name="rx" scoped="" ref="0x2b3126888650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b3126887be0" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b3126887be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b3126886020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b31268861a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b3126886330"/>
        <function-ref name="txDone" scoped="" ref="0x2b31268864b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b3126886640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b31268867c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b3126886950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b3126886ad8"/>
        <function-ref name="tx" scoped="" ref="0x2b3126886c60"/>
        <function-ref name="rx" scoped="" ref="0x2b3126886de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b312688ab80" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b312688ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3126889020"/>
        <function-ref name="stop" scoped="" ref="0x2b31268891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b31268889d0" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b31268889d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3126888d20"/>
        <function-ref name="stop" scoped="" ref="0x2b3126887020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b31268873a0" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b31268873a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31268876f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126887878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b312688a328" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b312688a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b312688a678"/>
        <function-ref name="stop" scoped="" ref="0x2b312688a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b3126885b18" loc="114:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b3126885b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126885e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b31268a73c8" loc="117:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b31268a73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b31268a7718"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b31268a78a0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b31268a7a28"/>
        <function-ref name="txDone" scoped="" ref="0x2b31268a7bb0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b31268a7d38"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b31268a6020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b31268a61a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b31268a6330"/>
        <function-ref name="tx" scoped="" ref="0x2b31268a64b8"/>
        <function-ref name="rx" scoped="" ref="0x2b31268a6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b31268a6998" loc="119:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b31268a6998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31268a6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b31268a3240" loc="122:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b31268a3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b31268a3590"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b31268a3718"/>
        <function-ref name="rxDone" scoped="" ref="0x2b31268a38a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b31268a3a28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b31268a3bb0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b31268a3d38"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b31268a2020"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b31268a21a8"/>
        <function-ref name="tx" scoped="" ref="0x2b31268a2330"/>
        <function-ref name="rx" scoped="" ref="0x2b31268a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b3126882af0" loc="116:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b3126882af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b3126882e40"/>
        <function-ref name="stop" scoped="" ref="0x2b31268a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b31268a50f0" loc="120:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b31268a50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31268a5440"/>
        <function-ref name="stop" scoped="" ref="0x2b31268a55c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b31268a5988" loc="121:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b31268a5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31268a5cd8"/>
        <function-ref name="stop" scoped="" ref="0x2b31268a5e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b31268a27d8" loc="124:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b31268a27d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b31268a2b28"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b31268a2cb0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b31268a2e38"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b31268a1020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b31268a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b31268a14b8" loc="125:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b31268a14b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b31268a1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b3126882258" loc="115:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b3126882258"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b31268825a8"/>
        <function-ref name="stop" scoped="" ref="0x2b3126882730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3126905aa0" loc="24:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3126905aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3126231788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126902828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126901190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126902cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126901618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3126900810" loc="24:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3126900810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TThree" ref="0x2b3126276d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b31268fd598"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b31268fb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b31268fda20"/>
        <function-ref name="overflow" scoped="" ref="0x2b31268fb4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b312690a5e8" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b312690a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b312690a938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b312690aac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b312690ac48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b312690add0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b3126912020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b31269121a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b3126912330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b31269124b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b3126912640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b31269127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b3126911020" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b3126911020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b3126927270"/>
        <function-ref name="test" scoped="" ref="0x2b3126929930"/>
        <function-ref name="get" scoped="" ref="0x2b3126911ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b3126909560"/>
        <function-ref name="reset" scoped="" ref="0x2b3126909a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126929db8"/>
        <function-ref name="set" scoped="" ref="0x2b3126909088"/>
        <function-ref name="start" scoped="" ref="0x2b3126929020"/>
        <function-ref name="stop" scoped="" ref="0x2b31269294a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3126926598" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3126926598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b312691fdb8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126925ab0"/>
        <function-ref name="get" scoped="" ref="0x2b3126925150"/>
        <function-ref name="reset" scoped="" ref="0x2b312691f020"/>
        <function-ref name="isOn" scoped="" ref="0x2b312691d270"/>
        <function-ref name="set" scoped="" ref="0x2b31269255d8"/>
        <function-ref name="start" scoped="" ref="0x2b312691f4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b312691f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b31269176e0" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b31269176e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3126915930"/>
        <function-ref name="test" scoped="" ref="0x2b3126915020"/>
        <function-ref name="get" scoped="" ref="0x2b31268f73a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b3126915db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b31269132f0"/>
        <function-ref name="reset" scoped="" ref="0x2b31268f61f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b31268f7d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b31269154a8"/>
        <function-ref name="set" scoped="" ref="0x2b31268f7830"/>
        <function-ref name="start" scoped="" ref="0x2b31268f6680"/>
        <function-ref name="stop" scoped="" ref="0x2b31268f6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b312693d838" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b312693d838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b312693db88"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b312693dd10"/>
        <function-ref name="getControlA" scoped="" ref="0x2b312693c020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b312693c1a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b312693c330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b312693c4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b312693c640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b312693c7c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b312693c950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b312693cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b3126937938" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b3126937938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b31269330f8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126936e40"/>
        <function-ref name="get" scoped="" ref="0x2b31269364e0"/>
        <function-ref name="reset" scoped="" ref="0x2b3126934310"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126933580"/>
        <function-ref name="set" scoped="" ref="0x2b3126936968"/>
        <function-ref name="start" scoped="" ref="0x2b3126934798"/>
        <function-ref name="stop" scoped="" ref="0x2b3126934c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b312693b020" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b312693b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b3126937270"/>
        <function-ref name="test" scoped="" ref="0x2b3126938930"/>
        <function-ref name="get" scoped="" ref="0x2b312693bba0"/>
        <function-ref name="captured" scoped="" ref="0x2b3126939560"/>
        <function-ref name="reset" scoped="" ref="0x2b3126939a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126938db8"/>
        <function-ref name="set" scoped="" ref="0x2b3126939088"/>
        <function-ref name="start" scoped="" ref="0x2b3126938020"/>
        <function-ref name="stop" scoped="" ref="0x2b31269384a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b3126933bf8" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b3126933bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b31269574a8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126930130"/>
        <function-ref name="get" scoped="" ref="0x2b31269327a0"/>
        <function-ref name="reset" scoped="" ref="0x2b31269305b8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126957930"/>
        <function-ref name="set" scoped="" ref="0x2b3126932c28"/>
        <function-ref name="start" scoped="" ref="0x2b3126930a40"/>
        <function-ref name="stop" scoped="" ref="0x2b3126957020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b3126956020" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b3126956020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b31269537a8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126955560"/>
        <function-ref name="get" scoped="" ref="0x2b3126956ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b31269559e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126953c30"/>
        <function-ref name="set" scoped="" ref="0x2b3126955088"/>
        <function-ref name="start" scoped="" ref="0x2b3126955e70"/>
        <function-ref name="stop" scoped="" ref="0x2b3126953320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126942738" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126942738"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b312693e930"/>
        <function-ref name="test" scoped="" ref="0x2b312693e020"/>
        <function-ref name="get" scoped="" ref="0x2b31269413a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b312693edb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b312693d2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b312693f1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126941d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b312693e4a8"/>
        <function-ref name="set" scoped="" ref="0x2b3126941830"/>
        <function-ref name="start" scoped="" ref="0x2b312693f680"/>
        <function-ref name="stop" scoped="" ref="0x2b312693fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b31269d34e8" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b31269d34e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b31261a5d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b31261a5d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31269d3838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b31269d3c08" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b31269d3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b31269c4db8"/>
        <function-ref name="test" scoped="" ref="0x2b31269c44a8"/>
        <function-ref name="get" scoped="" ref="0x2b31269c7820"/>
        <function-ref name="setScale" scoped="" ref="0x2b31269c3270"/>
        <function-ref name="getScale" scoped="" ref="0x2b31269c3748"/>
        <function-ref name="reset" scoped="" ref="0x2b31269c5658"/>
        <function-ref name="overflow" scoped="" ref="0x2b31269c51d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b31269c4930"/>
        <function-ref name="set" scoped="" ref="0x2b31269c7ca8"/>
        <function-ref name="start" scoped="" ref="0x2b31269c5ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b31269c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b31269bfa98" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b31269bfa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TThree" ref="0x2b3126276d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b31269d9828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b31269d7190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b31269d9cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b31269d7618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b31269d7b78" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b31269d7b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b31269fdc20"/>
        <function-ref name="test" scoped="" ref="0x2b31269fd310"/>
        <function-ref name="get" scoped="" ref="0x2b31269d6728"/>
        <function-ref name="setScale" scoped="" ref="0x2b31269fc0f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b31269fc5d0"/>
        <function-ref name="reset" scoped="" ref="0x2b31269d5548"/>
        <function-ref name="overflow" scoped="" ref="0x2b31269d50c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b31269fd798"/>
        <function-ref name="set" scoped="" ref="0x2b31269d6bb0"/>
        <function-ref name="start" scoped="" ref="0x2b31269d59d0"/>
        <function-ref name="stop" scoped="" ref="0x2b31269d5e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b3126a07450" loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b3126a07450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TThree" ref="0x2b3126276d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126a051d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126a05ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126a05658"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126a04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3126a09270" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3126a09270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126231430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b3126231788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126a08020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126a08930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126a084a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126a08db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b3126a25060" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b3126a25060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b3126a253b0"/>
        <function-ref name="offset" scoped="" ref="0x2b3126a25538"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b3126a256c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b3126a376e0" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b3126a376e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b3126a43088"/>
        <function-ref name="enqueue" scoped="" ref="0x2b3126a43d48"/>
        <function-ref name="element" scoped="" ref="0x2b3126a413a8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b3126a44c10"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3126a436e8"/>
        <function-ref name="empty" scoped="" ref="0x2b3126a44370"/>
        <function-ref name="size" scoped="" ref="0x2b3126a447c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b3126a66b70" loc="93:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b3126a66b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b3126a67470"/>
        <function-ref name="enqueue" scoped="" ref="0x2b3126a64158"/>
        <function-ref name="element" scoped="" ref="0x2b3126a64788"/>
        <function-ref name="maxSize" scoped="" ref="0x2b3126a67020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b3126a67ad0"/>
        <function-ref name="empty" scoped="" ref="0x2b3126a686f0"/>
        <function-ref name="size" scoped="" ref="0x2b3126a68b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b3126a64e00" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b3126a64e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b3126a631a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126a63330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126a634b8"/>
        <function-ref name="cancel" scoped="" ref="0x2b3126a63640"/>
        <function-ref name="sendDone" scoped="" ref="0x2b3126a637c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b3126a63a50" loc="95:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b3126a63a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b3126a63da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b3126a62020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b3126a621a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b3126a62330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b3126a624b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b3126a5db48" loc="114:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b3126a5db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3126a5c020"/>
        <function-ref name="runTask" scoped="" ref="0x2b3126a5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126a40be0" loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126a40be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126a69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b3126a62730" loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b3126a62730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b3126a62a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b3126a62c08"/>
        <function-ref name="led1On" scoped="" ref="0x2b3126a62d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b3126a61020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b3126a611a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126a61330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b3126a614b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b3126a61ad8"/>
        <function-ref name="set" scoped="" ref="0x2b3126a61640"/>
        <function-ref name="led0On" scoped="" ref="0x2b3126a617c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b3126a61950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b3126a66358" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b3126a66358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b3126a666a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b3126a70400" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b3126a70400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b3126a70750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126a98e70" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126a98e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126a961e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b3126a964b8" loc="95:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b3126a964b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b3126a96808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b3126a90358" loc="39:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b3126a90358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b3126a906a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b3126a90a38" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b3126a90a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b3126a90d88"/>
        <function-ref name="stopDone" scoped="" ref="0x2b3126a8d020"/>
        <function-ref name="start" scoped="" ref="0x2b3126a8d1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b3126a8d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126a87420" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126a87420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126c456c8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126c48db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126c46ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126c46688"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126c44020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126c45b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126c46238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126c48020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126c450f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126c484c0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126c48960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b3126aafb60" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aafb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126aa9d98"/>
        <function-ref name="fired" scoped="" ref="0x2b3126aab4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126aa91f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126aabd78"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126aa8688"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126aa8238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126aab928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126aac6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126aa97c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126aacb90"/>
        <function-ref name="stop" scoped="" ref="0x2b3126aab088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b3126aa3208" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b3126aa3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126aa05f0"/>
        <function-ref name="fired" scoped="" ref="0x2b3126aa2b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126aa18c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126aa1470"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126a9e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126aa0a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126aa1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126aa3d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126aa0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126aa2238"/>
        <function-ref name="stop" scoped="" ref="0x2b3126aa26d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3126a9b980" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b3126a9b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126a9d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126aa64e0" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126aa64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126aa6830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b3126abbc80" loc="29:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b3126abbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126abaa28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126ab94a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126ab9020"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126ab9930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126ac5020" loc="27:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126ac5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126ac5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b3126abd838" loc="28:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b3126abd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126abb020"/>
        <function-ref name="fired" scoped="" ref="0x2b3126ac3020"/>
        <function-ref name="startAt" scoped="" ref="0x2b3126ac3930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126ac34a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3126abb4a8"/>
        <function-ref name="start" scoped="" ref="0x2b3126ac45e0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126ac4ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3126bb07c8" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b3126bb07c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126bad020"/>
        <function-ref name="fired" scoped="" ref="0x2b3126bae020"/>
        <function-ref name="startAt" scoped="" ref="0x2b3126bae930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126bae4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3126bad4a8"/>
        <function-ref name="start" scoped="" ref="0x2b3126baf578"/>
        <function-ref name="stop" scoped="" ref="0x2b3126bafa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3126bb0020" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3126bb0020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b31261a5d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b31261a5d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b3126bb0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3126bada90" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3126bada90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126bab828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126baa190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126babcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126baa618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b3127068b60" loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b3127068b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b3127067020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b31270671a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b3127067330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b31270674b8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b3127067640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b31270677c8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b3127067950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b3127067ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b3127073808" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b3127073808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3127070020"/>
        <function-ref name="fired" scoped="" ref="0x2b3127071020"/>
        <function-ref name="startAt" scoped="" ref="0x2b3127071930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b31270714a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b31270704a8"/>
        <function-ref name="start" scoped="" ref="0x2b3127072598"/>
        <function-ref name="stop" scoped="" ref="0x2b3127072a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b3127073060" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b3127073060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b31270733b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b3127070a90" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3127070a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b312706e828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b312706d190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b312706ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b312706d618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b31270a7060" loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b31270a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b31270a73b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b31270a7538"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b31270a76c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b31270a7848"/>
        <function-ref name="countBusy" scoped="" ref="0x2b31270a79d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b31270a7b58"/>
        <function-ref name="getAssr" scoped="" ref="0x2b31270a7ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b31270a7e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b3127067e68" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3127067e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b31270a8798"/>
        <function-ref name="fired" scoped="" ref="0x2b31270a94f8"/>
        <function-ref name="get" scoped="" ref="0x2b3127066a18"/>
        <function-ref name="reset" scoped="" ref="0x2b31270a9980"/>
        <function-ref name="isOn" scoped="" ref="0x2b31270a8c20"/>
        <function-ref name="set" scoped="" ref="0x2b31270a9020"/>
        <function-ref name="start" scoped="" ref="0x2b31270a9e08"/>
        <function-ref name="stop" scoped="" ref="0x2b31270a8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b312706db98" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b312706db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3127069db8"/>
        <function-ref name="test" scoped="" ref="0x2b31270694a8"/>
        <function-ref name="get" scoped="" ref="0x2b312706c760"/>
        <function-ref name="setScale" scoped="" ref="0x2b3127068270"/>
        <function-ref name="getScale" scoped="" ref="0x2b3127068748"/>
        <function-ref name="reset" scoped="" ref="0x2b312706b580"/>
        <function-ref name="overflow" scoped="" ref="0x2b312706b0f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3127069930"/>
        <function-ref name="set" scoped="" ref="0x2b312706cbe8"/>
        <function-ref name="start" scoped="" ref="0x2b312706ba08"/>
        <function-ref name="stop" scoped="" ref="0x2b3127069020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b3126b2a558" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b3126b2a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b3126b2a8a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b3126b2aa30"/>
        <function-ref name="getControlA" scoped="" ref="0x2b3126b2abb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b3126b2ad40"/>
        <function-ref name="setControlB" scoped="" ref="0x2b3126b29020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b3126b291a8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b3126b29330"/>
        <function-ref name="setControlA" scoped="" ref="0x2b3126b294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b3126b25c38" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b3126b25c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b3126b54020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b3126b541a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b3126b54330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b3126b544b8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b3126b54640"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b3126b547c8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b3126b54950"/>
        <function-ref name="setAssr" scoped="" ref="0x2b3126b54ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3126b29980" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3126b29980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b3126b25270"/>
        <function-ref name="fired" scoped="" ref="0x2b3126b26020"/>
        <function-ref name="get" scoped="" ref="0x2b3126b27560"/>
        <function-ref name="reset" scoped="" ref="0x2b3126b264a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126b256f8"/>
        <function-ref name="set" scoped="" ref="0x2b3126b279e8"/>
        <function-ref name="start" scoped="" ref="0x2b3126b26930"/>
        <function-ref name="stop" scoped="" ref="0x2b3126b26db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126b2f318" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126b2f318"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3126b2b580"/>
        <function-ref name="test" scoped="" ref="0x2b3126b2cc20"/>
        <function-ref name="get" scoped="" ref="0x2b3126b2e020"/>
        <function-ref name="setScale" scoped="" ref="0x2b3126b2ba08"/>
        <function-ref name="getScale" scoped="" ref="0x2b3126b2a020"/>
        <function-ref name="reset" scoped="" ref="0x2b3126b2ee08"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126b2e980"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126b2b0f8"/>
        <function-ref name="set" scoped="" ref="0x2b3126b2e4a8"/>
        <function-ref name="start" scoped="" ref="0x2b3126b2c310"/>
        <function-ref name="stop" scoped="" ref="0x2b3126b2c798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b3126b4a020" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b3126b4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b3126b4a370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b3126b4a4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b3126b4a680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b3126b4a808"/>
        <function-ref name="setControlB" scoped="" ref="0x2b3126b4a990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b3126b4ab18"/>
        <function-ref name="getControlB" scoped="" ref="0x2b3126b4aca0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b3126b4ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b3126b46578" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b3126b46578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b3126b468c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b3126b46c78" loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b3126b46c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b3126b44020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b3126b441a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b3126b44330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b3126b444b8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b3126b44640"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b3126b447c8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b3126b44950"/>
        <function-ref name="setAssr" scoped="" ref="0x2b3126b44ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b3126b49340" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b3126b49340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b3126b47c20"/>
        <function-ref name="fired" scoped="" ref="0x2b3126b48980"/>
        <function-ref name="get" scoped="" ref="0x2b3126b48020"/>
        <function-ref name="reset" scoped="" ref="0x2b3126b48e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126b460f8"/>
        <function-ref name="set" scoped="" ref="0x2b3126b484a8"/>
        <function-ref name="start" scoped="" ref="0x2b3126b47310"/>
        <function-ref name="stop" scoped="" ref="0x2b3126b47798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126b4f020" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126b4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b3126b4c0f8"/>
        <function-ref name="test" scoped="" ref="0x2b3126b4d7a8"/>
        <function-ref name="get" scoped="" ref="0x2b3126b4fba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b3126b4c580"/>
        <function-ref name="getScale" scoped="" ref="0x2b3126b4ca58"/>
        <function-ref name="reset" scoped="" ref="0x2b3126b4e9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126b4e560"/>
        <function-ref name="isOn" scoped="" ref="0x2b3126b4dc30"/>
        <function-ref name="set" scoped="" ref="0x2b3126b4e088"/>
        <function-ref name="start" scoped="" ref="0x2b3126b4ee70"/>
        <function-ref name="stop" scoped="" ref="0x2b3126b4d320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b3126bdd5e8" loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b3126bdd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3126bdd938"/>
        <function-ref name="runTask" scoped="" ref="0x2b3126bddac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b3126be1648" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b3126be1648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126bdfcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b3126be0d50"/>
        <function-ref name="startAt" scoped="" ref="0x2b3126bdf6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126bdf230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b3126bdd190"/>
        <function-ref name="start" scoped="" ref="0x2b3126be03f0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126be08c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126be6290" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126be6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126be25f0"/>
        <function-ref name="fired" scoped="" ref="0x2b3126be5ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126be48c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126be4470"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126be1020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126be2a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126be4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126be6dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126be2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126be52b8"/>
        <function-ref name="stop" scoped="" ref="0x2b3126be5758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b3126c28618" loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b3126c28618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b3126c28968"/>
        <function-ref name="runTask" scoped="" ref="0x2b3126c28af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b3126c2d5a0" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b3126c2d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126c298f0"/>
        <function-ref name="fired" scoped="" ref="0x2b3126c2b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126c2bd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126c2b8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126c281c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126c29d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126c2b470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126c2c118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126c29320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126c2c5b8"/>
        <function-ref name="stop" scoped="" ref="0x2b3126c2ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126c330c8" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126c330c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126c2f610"/>
        <function-ref name="fired" scoped="" ref="0x2b3126c32a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126c30900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126c30490"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126c2d020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126c2fa80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126c30020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126c33c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126c2f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126c32118"/>
        <function-ref name="stop" scoped="" ref="0x2b3126c325d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b3126c25c38" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b3126c25c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126c24820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b3126c24e48" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b3126c24e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b3126c4fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b3126c4d548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b3126c4d0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b3126c4d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126c438d8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126c438d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126c3fbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b3126c40238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126c3f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126c40ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126c3e4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126c3e088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126c40688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126c41458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126c3f5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126c418f8"/>
        <function-ref name="stop" scoped="" ref="0x2b3126c41d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126c3cda8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126c3cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126c38088"/>
        <function-ref name="fired" scoped="" ref="0x2b3126c3a708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126c39470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126c39020"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126c38928"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126c384d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126c3ab58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126c3b930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126c39a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126c3bdd0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126c3a2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b3126c69350" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b3126c69350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b3126233020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b3126233378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b3126c666c8"/>
        <function-ref name="fired" scoped="" ref="0x2b3126c68db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b3126c67ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b3126c67688"/>
        <function-ref name="getdt" scoped="" ref="0x2b3126c64020"/>
        <function-ref name="gett0" scoped="" ref="0x2b3126c66b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b3126c67238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b3126c68020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b3126c660f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b3126c684c0"/>
        <function-ref name="stop" scoped="" ref="0x2b3126c68960"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b3126362c08" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
        <documentation loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b3126363898" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b312637bb30" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b312637b8c0" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b312636d328" loc="31:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b312636dd20" loc="39:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b312636dab0" loc="39:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b312636c7d0" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b312636c560" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b312637b070" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b312637dab0" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b312638d1d8" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b312637ed20" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b312638c020" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b312637d400" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b312638d890" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b312637e020" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b312637e690" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b31258c0e08" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b31261bbd10" loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b31261bb570" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b31261c9a38" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b31261c7258" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b312627de40" loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b31262944f8" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b3126202940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b3126295020" loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b312652a068" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b312652a068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b312653c918" loc="136:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3126527418" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b312653d0b8" loc="114:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3126526a98" loc="114:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b3126526db0" loc="114:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b3126526360" loc="98:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b312653a878" loc="151:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b312653a070" loc="144:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3126527b90" loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b312652ab38" loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b312652a8c8" loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b312653c020" loc="129:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b312653d9e8" loc="129:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b312653dd00" loc="129:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b31265295a8" loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3126529338" loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3126529d50" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b312653e020" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b312653e758" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b3126559020" loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b3126559e70" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b3126557480" loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3126557c18" loc="117:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b3126559738" loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3126556768" loc="134:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b31265564f8" loc="134:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b312653f7e0" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b3126558608" loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b3126558d20" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3126592700" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b3126595dc8" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b3126592160" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3126592470" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b31265a6a68" loc="135:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265a64a0" loc="135:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31265a67b0" loc="135:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b3126591c58" loc="123:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b31265909f0" loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3126590780" loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b312658ee28" loc="110:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b312658e880" loc="110:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b312658eba8" loc="110:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b31265a2290" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265a2020" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b31265a1290" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265a1020" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b312659c3c0" loc="126:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b312659ed98" loc="126:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b312659c108" loc="126:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b312659e508" loc="106:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b312659f658" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b312659f0c8" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b312659f3d8" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b31265a8680" loc="177:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b3126341168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265a8410" loc="177:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b31265b1680" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265b1410" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b3126593bd0" loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b31265b3680" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265b3410" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b31265aee10" loc="121:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265ae858" loc="121:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b31265aeb90" loc="121:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b31265b09c8" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265b0410" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b31265b0748" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b3126341520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b31265aa290" loc="147:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265aa020" loc="147:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b31265a95a0" loc="162:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265a9020" loc="162:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b31265a9320" loc="162:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b3126342d78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b31265ac020" loc="136:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265afd60" loc="136:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b31265a7a50" loc="187:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b3126341168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b31265a74a0" loc="187:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b31265a77d0" loc="187:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b3126341168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b31265be818" loc="195:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b3126341168"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b31265bc0a8" loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b312659bde8" loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b31265bb290" loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265bb020" loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b31265b9338" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265b90c8" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b31265cc6d0" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265cc140" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31265cc450" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b31265c7a68" loc="125:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="115:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265c74a0" loc="125:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31265c77b0" loc="125:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b31265c8c70" loc="112:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="102:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b31265ca948" loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265ca6d8" loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b31265c9d58" loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
        <documentation loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31265c97b0" loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b31265c9ad8" loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b3126638a48" loc="113:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b31266387d8" loc="113:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b3126637e38" loc="138:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b3126637bc8" loc="138:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b312661fda0" loc="104:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3126637258" loc="130:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b31266320c8" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
              <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3126639790" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b3126639ab8" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b3126639dc8" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b31266ae640" loc="31:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b31266ae060" loc="31:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b31266ae3c0" loc="31:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b3126695960" loc="15:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b3126691760" loc="23:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b3126691198" loc="23:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b312635a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b3126359da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b31266914e0" loc="23:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b31266d4178" loc="95:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b31266d4918" loc="105:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b31266d2730" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b31266d2020" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b31266be550" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b31266db8c8" loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b31266d93a8" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b31266d9138" loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b31266da110" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b31266db0a8" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b31266bedd0" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b31266d9ba0" loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b31266da960" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b31266c5110" loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b31266c59c8" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b31266c77b8" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b31266c7548" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b31266c44e8" loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b31266c4278" loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b31266c2450" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b31266c1020" loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b31266c2d88" loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b31266c1a78" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b31266c1808" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b31267ffb50" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b31267ff5b0" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31267ff8d0" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b31267f94e0" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b31267f9270" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b31267f82a0" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b31267f9c58" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31267f8020" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b31267fb258" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b31267f7a38" loc="99:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b31267f7160" loc="99:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31267f7480" loc="99:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b31267f77a8" loc="99:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b31267fbad0" loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b31267fd358" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b31267fc9f8" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b31267fcd18" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b31258cdb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b31267fd0c8" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b3126822bc8" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b3126822958" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b312681f9b0" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b312681f3f8" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b312681f730" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b312681ab10" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b312681ab10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b312681ad40" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b312681ad40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b3126817620" loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b312681ad40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b3126816688" loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b3126817e38" loc="71:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b3126816d78" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b312682c3e0" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b312682e5b0" loc="42:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b312682a9f0" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b312682a780" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b312682ba38" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b312682f730" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b312682fe50" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b312682ecd0" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b312682cac0" loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b312682b3a8" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b312682b138" loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b312682a110" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b312690f1d8" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b312690c578" loc="87:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b3126910328" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b312690b780" loc="91:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b312690b020" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b312690cc78" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b312690e4c0" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b312690e250" loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b312690a290" loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b312690a020" loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b3126910a58" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b312690ede8" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b312690eb78" loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b312690fb00" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b312690f890" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b3126908068" loc="40:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126908068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b312692b9b8" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b312692b748" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b312692c8e8" loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3126908920" loc="47:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126908068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b312692fc38" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126908068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b312692f9c8" loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126908068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b312692d3a0" loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b312692b070" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b312692f290" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126908068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b312692f020" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126908068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b312692da98" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b312692c1d8" loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b3126927c90" loc="41:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126927c90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b31269203e0" loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3126923760" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b3126924588" loc="48:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126927c90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b3126923e68" loc="62:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b3126920b30" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b3126923020" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126927c90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b3126924c60" loc="54:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126927c90"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3126922590" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3126922c78" loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b31268f8ba0" loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b31268f8ba0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b31269180d8" loc="98:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b31269191d8" loc="87:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b31268f54a0" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b31268f8ba0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b3126918a28" loc="104:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b31269187b8" loc="104:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b31269171d8" loc="110:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b31268f4c40" loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b31268f4520" loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b3126919930" loc="93:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b31268f5dd8" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b31268f8ba0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b31268f5b68" loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b31268f8ba0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b312691a360" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b312691aa48" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b3126a36670" loc="43:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b3126a36670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b3126a32728" loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b3126a36670"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b3126a2f020" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b31261cb5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b3126a36670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b3126a31d78" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b3126a36670"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b31258c8488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b31258c8488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b3126a2e020" loc="101:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b3126a36670"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b3126a2fc50" loc="101:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b3126a32020" loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b3126a31290" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b3126a36670"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b3126a33020" loc="50:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b3126a33740" loc="58:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b3126a66020" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b3126a69cc8" loc="49:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3126a9ec00" loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3126a9ec00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b3126a9b4c8" loc="61:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b31258ce608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b3126ac5e28" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b3126ac5e28"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b3126ac20c8" loc="56:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b3126abe958" loc="109:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b3126ac1af0" loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b3126abe020" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b3126ac0a40" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b3126ac0d60" loc="103:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b3126ac0290" loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b31261a64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b3126abd110" loc="116:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b3126ac2b88" loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b3126ac2918" loc="66:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b3126ac20c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b3126ac13a0" loc="73:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b3126af1b40" loc="89:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b3126af2a30" loc="85:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b3126af47c0" loc="79:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b3126af13e0" loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b3126af1170" loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b3126af22d0" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3126af2060" loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b3126aef4e8" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b3126aef278" loc="90:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b3126af3020" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b3126af3948" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b3126af36d8" loc="81:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b31258cd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b3126ae69a8" loc="92:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b3126ae8a60" loc="68:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b3126ae71d8" loc="74:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b3126ae79a8" loc="80:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b3126ae41d8" loc="98:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b3126ae61d8" loc="86:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b3126aeb8a0" loc="57:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3126248978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b3126248d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b3126ae8290" loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3126248978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b3126248d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b3126ae8020" loc="63:/home/vagrant/tinyos-release-tinyos-2_1_2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b3126248978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b3126248d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
